# If we list all the natural numbers below 10 that are 
# multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

# Find the sum of all the multiples of 3 or 5 below 1000.


sequence = range(1000)

final = 0

for i in sequence:
	if i % 3 == 0:
		final = final + i
	elif i % 3 != 0 and i % 5 == 0:
		final += i


print (final)


# Each new term in the Fibonacci sequence is generated by adding the previous two terms.

# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.



fibo = [1, 2, 3, 5] # fibonacci

solve = 0

while fibo[-1] <= 4000000:
	fibo.append(fibo[-1]+fibo[-2])


for var in fibo:
	if var % 2 == 0:
		solve += var

print (solve)





# The prime factors of 13195 are 5, 7, 13 and 29.
# What is the largest prime factor of the number 600851475143 ?



thenumber = 1467
primenumbers = [2, 3, 5] # martivi ricxvebi

for number in range(2, thenumber): # this block finds all the prime numbers below thenumber
	for prime in primenumbers:
		if number % prime == 0:
			# print (number, 'equals', number, '*', number / prime)
			break
		elif prime == primenumbers[-1] and number % prime != 0:
			# print (prime, 'is a prime number')
			primenumbers.append(number)


print (primenumbers)
primenumbers.reverse()

for prime in primenumbers: # this block finds the largest prime factor of the number
	if thenumber % prime == 0:
		print (prime, 'is the larges prime factor of ', thenumber)
		print (thenumber // prime, '*', prime, '=', thenumber)
		break


# The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.
# Find the largest palindrome made from the product of two 3-digit numbers.

a = reverse(list(range(100, 1000)))
b = reverse(list(range(100, 1000)))





